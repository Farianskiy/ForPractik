<Application x:Class="ForPractik.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:ForPractik"
             StartupUri="View/MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>

            <Style TargetType="Button" x:Key="GelButton">
                <Setter Property="Background" Value="#42AAFF" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid x:Name="RootElement">
                                <!-- drop shadow - needs to be blurred for correct effect -->
                                <Rectangle Fill="#40000000" Margin="1,1,0,0" RadiusX="6" RadiusY="6">
                                    <Rectangle.BitmapEffect>
                                        <BlurBitmapEffect Radius="3" />
                                    </Rectangle.BitmapEffect>
                                </Rectangle>
                                <Grid x:Name="mainButton"
                      Margin="0,0,1,1"
                      RenderTransformOrigin="0.5,0.5">
                                    <Grid.RenderTransform>
                                        <TransformGroup>
                                            <TranslateTransform X="0.0" Y="0.0"/>
                                            <ScaleTransform ScaleX="1.0" ScaleY="1.0" />
                                        </TransformGroup>
                                    </Grid.RenderTransform>
                                    <Rectangle x:Name="mainRect" Fill="{TemplateBinding Background}" RadiusX="6" RadiusY="6">
                                    </Rectangle>

                                    <!-- transparent rect -->
                                    <Rectangle x:Name="glowRect" Margin="1,1,1,1" RadiusX="5" RadiusY="5">
                                        <Rectangle.Fill>
                                            <SolidColorBrush Color="#00FFFFFF"/>
                                        </Rectangle.Fill>
                                    </Rectangle>

                                    <ContentPresenter HorizontalAlignment="Center"
                                      Margin="4,0,4,0"
                                      Content="{TemplateBinding Content}"
                                      VerticalAlignment="Center">
                                    </ContentPresenter>

                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="mainButton" Property="RenderTransform" >
                                        <Setter.Value>
                                            <TransformGroup>
                                                <TranslateTransform X="0.0" Y="0.0"/>
                                                <ScaleTransform ScaleX="1.03" ScaleY="1.03" />
                                            </TransformGroup>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Foreground" Value="#FF4788c8" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="mainButton" Property="RenderTransform" >
                                        <Setter.Value>
                                            <TransformGroup>
                                                <TranslateTransform X="1" Y="1"/>
                                                <ScaleTransform ScaleX="1.03" ScaleY="1.03" />
                                            </TransformGroup>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>








            <Style TargetType="{x:Type DataGridColumnHeader}">
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Height" Value="35" />
                <Setter Property="SeparatorBrush" Value="#42AAFF" />
                <Setter Property="FontWeight" Value="Black" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="columnHeaderBorder" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                    <EasingColorKeyFrame KeyTime="0" Value="#42AAFF" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Border x:Name="columnHeaderBorder" BorderThickness="1" Padding="3,0,3,0">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                            <GradientStop Offset="0" Color="#42AAFF" />
                                            <GradientStop Offset="1" Color="#00537d" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                            <GradientStop Offset="0" Color="#CCE4F6" />
                                            <GradientStop Offset="1" Color="#42AAFF" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>




            <Style TargetType="{x:Type DataGridRow}">
                <Setter Property="Background" Value="White" />
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
                <Setter Property="ValidationErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <TextBlock Margin="2,0,0,0"
                       VerticalAlignment="Center"
                       Foreground="White"
                       Text="!" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridRow}">
                            <Border x:Name="DGR_Border"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    SnapsToDevicePixels="True">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Offset="0" Color="White" />
                                        <GradientStop Offset="1" Color="White" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="Normal_AlternatingRow">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                    <EasingColorKeyFrame KeyTime="0" Value="White" />
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                    <EasingColorKeyFrame KeyTime="0" Value="White" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Normal_Selected">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                    <EasingColorKeyFrame KeyTime="0" Value="#42AAFF" />
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                    <EasingColorKeyFrame KeyTime="0" Value="#42AAFF" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                    <EasingColorKeyFrame KeyTime="0" Value="#A9DAFF" />
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                    <EasingColorKeyFrame KeyTime="0" Value="#A9DAFF" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <SelectiveScrollingGrid>
                                    <SelectiveScrollingGrid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </SelectiveScrollingGrid.ColumnDefinitions>
                                    <SelectiveScrollingGrid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </SelectiveScrollingGrid.RowDefinitions>
                                    <DataGridCellsPresenter Grid.Column="1"
                                            ItemsPanel="{TemplateBinding ItemsPanel}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    <DataGridDetailsPresenter Grid.Row="1"
                                              Grid.Column="1"
                                              SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen,
                                                                                                             ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical},
                                                                                                             Converter={x:Static DataGrid.RowDetailsScrollingConverter},
                                                                                                             RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                              Visibility="{TemplateBinding DetailsVisibility}" />
                                    <DataGridRowHeader Grid.RowSpan="2"
                                      SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                      Visibility="{Binding HeadersVisibility,
                                                           ConverterParameter={x:Static DataGridHeadersVisibility.Row},
                                                           Converter={x:Static DataGrid.HeadersVisibilityConverter},
                                                           RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                </SelectiveScrollingGrid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <Style TargetType="{x:Type DataGridCell}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                            <Border x:Name="border"
                    Background="Transparent"
                    BorderBrush="Transparent"
                    BorderThickness="1"
                    SnapsToDevicePixels="True">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Unfocused" />
                                        <VisualState x:Name="Focused" />
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="CurrentStates">
                                        <VisualState x:Name="Regular" />
                                        <VisualState x:Name="Current">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                                    <EasingColorKeyFrame KeyTime="0" Value="LightBlue" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="ToggleButton">
                <Setter Property="Padding" Value="3" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="DefaultPath" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                                    <SplineColorKeyFrame KeyTime="0:0:0.2" Value="LightBlue" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed" />
                                        <VisualState x:Name="Disabled" />
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="CheckStates">
                                        <VisualState x:Name="Checked">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Duration="0"
                                                               Storyboard.TargetName="DefaultPath"
                                                               Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Collapsed</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Duration="0"
                                                               Storyboard.TargetName="CheckedPath"
                                                               Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="CheckedPath" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                                    <SplineColorKeyFrame KeyTime="0:0:0.2" Value="#CCAA0000" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unchecked" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <ContentPresenter x:Name="contentPresenter"
                                  Margin="{TemplateBinding Padding}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  Content="{TemplateBinding Content}"
                                  ContentTemplate="{TemplateBinding ContentTemplate}" />
                                <Path x:Name="DefaultPath"
                      VerticalAlignment="Top"
                      Data="M0,0 14,7 0,14 Z"
                      Fill="Gray"
                      Stretch="Fill" />
                                <Path x:Name="CheckedPath"
                      VerticalAlignment="Top"
                      Data="M0,0 14,0 7,14 Z"
                      Fill="LightGray"
                      Stretch="Fill"
                      Visibility="Collapsed" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type DataGrid}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
                <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
                <Setter Property="ScrollViewer.PanningMode" Value="Both" />
                <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGrid}">
                            <Border Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="2"
                    CornerRadius="5"
                    Padding="{TemplateBinding Padding}"
                    SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                                    <ScrollViewer.Template>
                                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="*" />
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>
                                                <Button Width="{Binding CellsPanelHorizontalOffset,
                                                RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                        Command="{x:Static DataGrid.SelectAllCommand}"
                                        Focusable="false"
                                        Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle,
                                                                      TypeInTargetAssembly={x:Type DataGrid}}}"
                                        Visibility="{Binding HeadersVisibility,
                                                         ConverterParameter={x:Static DataGridHeadersVisibility.All},
                                                         Converter={x:Static DataGrid.HeadersVisibilityConverter},
                                                         RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                                                Grid.Column="1"
                                                                Visibility="{Binding HeadersVisibility,
                                                                                 ConverterParameter={x:Static DataGridHeadersVisibility.Column},
                                                                                 Converter={x:Static DataGrid.HeadersVisibilityConverter},
                                                                                 RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                    Grid.Row="1"
                                                    Grid.ColumnSpan="2"
                                                    CanContentScroll="{TemplateBinding CanContentScroll}" />
                                                <ScrollBar x:Name="PART_VerticalScrollBar"
                                           Grid.Row="1"
                                           Grid.Column="2"
                                           Maximum="{TemplateBinding ScrollableHeight}"
                                           Orientation="Vertical"
                                           ViewportSize="{TemplateBinding ViewportHeight}"
                                           Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                           Value="{Binding VerticalOffset,
                                                       Mode=OneWay,
                                                       RelativeSource={RelativeSource TemplatedParent}}" />
                                                <Grid Grid.Row="2" Grid.Column="1">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                        <ColumnDefinition Width="*" />
                                                    </Grid.ColumnDefinitions>
                                                    <ScrollBar x:Name="PART_HorizontalScrollBar"
                                               Grid.Column="1"
                                               Maximum="{TemplateBinding ScrollableWidth}"
                                               Orientation="Horizontal"
                                               ViewportSize="{TemplateBinding ViewportWidth}"
                                               Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                               Value="{Binding HorizontalOffset,
                                                           Mode=OneWay,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />
                                                </Grid>
                                            </Grid>
                                        </ControlTemplate>
                                    </ScrollViewer.Template>
                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </ScrollViewer>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsGrouping" Value="True">
                        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <BooleanToVisibilityConverter x:Key="bool2VisibilityConverter" />
            <Color x:Key="BackgroundColor">#CCE4F6</Color>
            <Color x:Key="StandardColor">#4682B4</Color>
            <Color x:Key="HoverColor">#6FA9D2</Color>
            <Color x:Key="PressedColor">#2A4E75</Color>
            <Color x:Key="DialogBackgroundColor">#FF666666</Color>
            <Color x:Key="ScollBarBackgroundStart">#80B3D3</Color>
            <Color x:Key="ScollBarBackgroundEnd">#CCE4F6</Color>

            <SolidColorBrush x:Key="StandardBrush" Color="{StaticResource StandardColor}" />
            <SolidColorBrush x:Key="HoverBrush" Color="{StaticResource HoverColor}" />
            <SolidColorBrush x:Key="BackgroundBrush" Color="{StaticResource BackgroundColor}" />

            <LinearGradientBrush x:Key="ScollBarBackgroundBrush" StartPoint="0,0" EndPoint="1,0">
                <LinearGradientBrush.GradientStops>
                    <GradientStop Offset="0" Color="{StaticResource ScollBarBackgroundStart}" />
                    <GradientStop Offset="1" Color="{StaticResource ScollBarBackgroundEnd}" />
                </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>

            <!-- Scrollbar Buttons -->
            <Style x:Key="ScrollButtons" TargetType="{x:Type RepeatButton}">
                <Setter Property="Focusable" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border Name="Border" Background="Transparent">
                                <ContentPresenter Name="ContentPresenter"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Content="{TemplateBinding Content}"
                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource HoverBrush}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedColor}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Scrollbar Thumbs -->
            <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
                <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Grid Name="Grid">
                                <Rectangle Width="Auto"
                           Height="Auto"
                           HorizontalAlignment="Stretch"
                           VerticalAlignment="Stretch"
                           Fill="Transparent" />
                                <Rectangle Name="Rectangle1"
                           Width="7"
                           Height="Auto"
                           HorizontalAlignment="Stretch"
                           VerticalAlignment="Stretch"
                           Fill="{TemplateBinding Background}"
                           RadiusX="4"
                           RadiusY="4" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Rectangle1" Property="Fill" Value="{StaticResource HoverBrush}" />
                                </Trigger>
                                <Trigger Property="IsDragging" Value="True">
                                    <Setter TargetName="Rectangle1" Property="Fill" Value="{StaticResource PressedColor}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--  Scrollbar  -->
            <Style x:Key="MyScrollBar" TargetType="{x:Type ScrollBar}">
                <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrush}}" />
                <Setter Property="Background" Value="{DynamicResource ScollBarBackgroundBrush}" />
                <Setter Property="Width" Value="12" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="GridRoot"
                  Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidth}}"
                  Background="{TemplateBinding Background}">
                                <Grid.RowDefinitions>
                                    <RowDefinition MaxHeight="18" />
                                    <RowDefinition Height="0.00001*" />
                                    <RowDefinition MaxHeight="18" />
                                </Grid.RowDefinitions>
                                <RepeatButton x:Name="DecreaseRepeat"
                              Command="ScrollBar.LineUpCommand"
                              Foreground="{StaticResource StandardBrush}"
                              Style="{DynamicResource ScrollButtons}">
                                    <Path x:Name="DecreaseArrow"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Data="F1 M 3.5,0L 0,7L 7,7L 3.5,0 Z "
                          Fill="{StaticResource StandardBrush}" />
                                </RepeatButton>
                                <Track x:Name="PART_Track"
                       Grid.Row="1"
                       Focusable="false"
                       IsDirectionReversed="true">
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb"
                              Style="{DynamicResource ScrollThumbs}" />
                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton x:Name="PageUp"
                                      Command="ScrollBar.PageDownCommand"
                                      Focusable="false"
                                      Opacity="0" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton x:Name="PageDown"
                                      Command="ScrollBar.PageUpCommand"
                                      Focusable="false"
                                      Opacity="0" />
                                    </Track.DecreaseRepeatButton>
                                </Track>
                                <RepeatButton x:Name="IncreaseRepeat"
                              Grid.Row="2"
                              Command="ScrollBar.LineDownCommand"
                              Foreground="{DynamicResource StandardBrush}"
                              Style="{DynamicResource ScrollButtons}">
                                    <Path x:Name="IncreaseArrow"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Data="F1 M 3.5,7L 7,0L 0,0L 3.5,7 Z "
                          Fill="{StaticResource StandardBrush}" />
                                </RepeatButton>
                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger SourceName="IncreaseRepeat" Property="IsMouseOver" Value="true">
                                    <Setter TargetName="IncreaseArrow" Property="Fill" Value="{StaticResource HoverBrush}" />
                                </Trigger>
                                <Trigger SourceName="DecreaseRepeat" Property="IsMouseOver" Value="true">
                                    <Setter TargetName="DecreaseArrow" Property="Fill" Value="{StaticResource HoverBrush}" />
                                </Trigger>

                                <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                                    <Setter TargetName="Thumb" Property="Background" Value="{StaticResource HoverBrush}" />
                                </Trigger>
                                <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                                    <Setter TargetName="Thumb" Property="Background" Value="{StaticResource StandardBrush}" />
                                </Trigger>

                                <Trigger SourceName="IncreaseRepeat" Property="IsPressed" Value="true">
                                    <Setter TargetName="IncreaseArrow" Property="Fill" Value="{StaticResource StandardBrush}" />
                                </Trigger>
                                <Trigger SourceName="DecreaseRepeat" Property="IsPressed" Value="true">
                                    <Setter TargetName="DecreaseArrow" Property="Fill" Value="{StaticResource StandardBrush}" />
                                </Trigger>
                                <Trigger Property="Orientation" Value="Horizontal">
                                    <Setter TargetName="GridRoot" Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="PART_Track" Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Width" Value="Auto" />
                                    <Setter Property="Height" Value="12" />
                                    <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                                    <Setter TargetName="DecreaseRepeat" Property="Command" Value="ScrollBar.LineLeftCommand" />
                                    <Setter TargetName="IncreaseRepeat" Property="Command" Value="ScrollBar.LineRightCommand" />
                                    <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                    <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <Color x:Key="ControlForeground">#181818</Color>
            <Color x:Key="ControlReadOnlyForeground">#383838</Color>
            <Color x:Key="ControlDisabledForeground">#686868</Color>

            <Color x:Key="ControlBackground">#f7f7f9</Color>
            <Color x:Key="ControlHoveredBackground">#fafafc</Color>
            <Color x:Key="ControlFocusedBackground">#fdfdff</Color>
            <Color x:Key="ControlReadOnlyBackground">#f2f2f4</Color>
            <Color x:Key="ControlDisabledBackground">#efeff2</Color>

            <Color x:Key="ControlBorder">LightSkyBlue</Color>
            <Color x:Key="ControlHoveredBorder">#0BBAE0</Color>
            <Color x:Key="ControlFocusedBorder">#4285F4</Color>
            <Color x:Key="ControlReadOnlyBorder">#4285F4</Color>
            <Color x:Key="ControlDisabledBorder">#4285F4</Color>

            <!-- creating a control template for TextBox -->
            <ControlTemplate x:Key="TextBoxTemplateBase" TargetType="{x:Type TextBox}">
                <Grid x:Name="root" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                    <!-- managing visual states to change controls styles on different states -->
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <Storyboard>
                                    <DoubleAnimation BeginTime="00:00:00.000" Duration="00:00:00.500"
                                         From="1" To="0"
                                         Storyboard.TargetProperty="Opacity"
                                         Storyboard.TargetName="hoverBorder"/>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="MouseOver">
                                <Storyboard>
                                    <DoubleAnimation BeginTime="00:00:00.000" Duration="00:00:00.500"
                                         From="0" To="1"
                                         Storyboard.TargetProperty="Opacity"
                                         Storyboard.TargetName="hoverBorder"/>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Disabled">
                                <Storyboard>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="normalBorder"
                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                        <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlDisabledBackground}" />
                                    </ColorAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="normalBorder"
                                                      Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                        <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlDisabledBorder}" />
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="ReadOnly">
                                <Storyboard>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="normalBorder"
                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                        <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlReadOnlyBackground}" />
                                    </ColorAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="normalBorder"
                                                      Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                        <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlReadOnlyBorder}" />
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="FocusStates">
                            <VisualState x:Name="Focused">
                                <Storyboard>
                                    <DoubleAnimation BeginTime="00:00:00.000" Duration="00:00:00.300"
                                         From="0" To="1"
                                         Storyboard.TargetProperty="Opacity"
                                         Storyboard.TargetName="focusBorder"/>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Unfocused">
                                <Storyboard>
                                    <DoubleAnimation BeginTime="00:00:00.000" Duration="00:00:00.700"
                                         From="1" To="0"
                                         Storyboard.TargetProperty="Opacity"
                                         Storyboard.TargetName="focusBorder"/>
                                </Storyboard>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>

                    <!-- main border, styling the border-brush and background for Normal state -->
                    <Border x:Name="normalBorder" 
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"/>

                    <!-- styling border-brush and background-color for MouseOver state -->
                    <Border x:Name="hoverBorder" Opacity="0"
                BorderThickness="{TemplateBinding BorderThickness}">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="{StaticResource ControlHoveredBorder}"/>
                        </Border.BorderBrush>
                        <Border.Background>
                            <SolidColorBrush Color="{StaticResource ControlHoveredBackground}"/>
                        </Border.Background>
                    </Border>

                    <!-- styling border-brush and background-color for Focused state -->
                    <Border x:Name="focusBorder" Opacity="0"
                BorderThickness="{TemplateBinding BorderThickness}">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="{StaticResource ControlFocusedBorder}"/>
                        </Border.BorderBrush>
                        <Border.Background>
                            <SolidColorBrush Color="{StaticResource ControlFocusedBackground}"/>
                        </Border.Background>
                    </Border>

                    <!-- TextBox uses a ScrollViewer named PART_ContentHost as its content-presenter -->
                    <ScrollViewer x:Name="PART_ContentHost"
                      Padding="{TemplateBinding Padding}"
                      BorderThickness="0" 
                      IsTabStop="False" 
                      Margin="2" 
                      Background="{x:Null}"
                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                      TextElement.Foreground="{TemplateBinding Foreground}"/>

                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground">
                            <Setter.Value>
                                <SolidColorBrush Color="{StaticResource ControlDisabledForeground}"/>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="IsReadOnly" Value="True">
                        <Setter Property="Foreground">
                            <Setter.Value>
                                <SolidColorBrush Color="{StaticResource ControlReadOnlyForeground}"/>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!-- every TextBox with property Style="{StaticResource TextBoxBaseStyle}" will use this style -->
            <Style x:Key="TextBoxBaseStyle" TargetType="{x:Type TextBox}">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource ControlBackground}"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource ControlForeground}"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Padding" Value="8 4"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource ControlBorder}"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template" Value="{StaticResource TextBoxTemplateBase}"/>
            </Style>

            <!-- and if you want to all TextBox `es to use this style, you have to add this line of code: -->
            <Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxBaseStyle}" />



            <Style x:Key="BlueTextBlockStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="FontFamily" Value="Time New Roman" />
            </Style>


            <!-- Создание стиля для ComboBox -->
            <!-- Flat ComboBox -->
            <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="#4285F4" />
            <!-- Замените цвет на голубой -->
            <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="White" />
            <!-- Замените цвет на голубой -->
            <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" />
            <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
            <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" />

            <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="20" />
                    </Grid.ColumnDefinitions>
                    <Border Grid.ColumnSpan="2" Name="Border"
        BorderBrush="{StaticResource ComboBoxNormalBorderBrush}" 
        CornerRadius="0" BorderThickness="1, 1, 1, 1" 
        Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
                    <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="#444" Name="ButtonBorder"
        CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
        Background="{StaticResource ComboBoxNormalBackgroundBrush}" />

                    <Path Name="Arrow" Grid.Column="1" 
        Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
        HorizontalAlignment="Center" Fill="#444"
        VerticalAlignment="Center" />
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="UIElement.IsMouseOver" Value="True">
                        <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="LightSkyBlue"/>
                        <!-- Замените цвет на голубой -->
                    </Trigger>
                    <Trigger Property="ToggleButton.IsChecked" Value="True">
                        <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="LightSkyBlue"/>
                        <!-- Замените цвет на голубой -->
                        <Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E"/>
                    </Trigger>
                    <Trigger Property="UIElement.IsEnabled" Value="False">
                        <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                        <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                        <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                        <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                        <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style x:Key="ComboBoxFlatStyle"  TargetType="{x:Type ComboBox}">
                <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
                <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
                <Setter Property="TextElement.Foreground" Value="Black"/>
                <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Grid>
                                <ToggleButton Name="ToggleButton" Grid.Column="2"
                    ClickMode="Press" Focusable="False"
                    IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                    Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                                <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                    HorizontalAlignment="Left" VerticalAlignment="Center"                              
                    Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                    ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                                <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                    IsReadOnly="{TemplateBinding IsReadOnly}"
                    Visibility="Hidden" Background="Transparent"
                    HorizontalAlignment="Left" VerticalAlignment="Center"
                    Focusable="True" >
                                    <TextBox.Template>
                                        <ControlTemplate TargetType="TextBox" >
                                            <Border Name="PART_ContentHost" Focusable="False" />
                                        </ControlTemplate>
                                    </TextBox.Template>
                                </TextBox>
                                <!-- Popup showing items -->
                                <Popup Name="Popup" Placement="Bottom"
                    Focusable="False" AllowsTransparency="True"
                    IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                    PopupAnimation="Slide">
                                    <Grid Name="DropDown" SnapsToDevicePixels="True"
                        MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                        MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                        <Border Name="DropDownBorder" Background="White" Margin="0, 1, 0, 0"
                            CornerRadius="0" BorderThickness="1,1,1,1" 
                            BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"/>
                                        <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="ItemsControl.HasItems" Value="False">
                                    <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                                </Trigger>
                                <Trigger Property="UIElement.IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                                </Trigger>
                                <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                </Trigger>
                                <Trigger Property="ComboBox.IsEditable" Value="True">
                                    <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                    <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                    <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Стиль для добавление текста-заполнителя в текстовое поле -->
            <Style x:Key="placeHolder" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Grid>
                                <TextBox Text="{Binding Path=Text,
                                        RelativeSource={RelativeSource TemplatedParent},
                                        Mode=TwoWay,
                                        UpdateSourceTrigger=PropertyChanged}"
                                        x:Name="textSource" Background="Transparent" Panel.ZIndex="2"
                                        TextWrapping="Wrap" AcceptsReturn="True" />
                                <TextBox Text="{TemplateBinding Tag}" Background="{TemplateBinding Background}" Panel.ZIndex="1" BorderThickness="0" >
                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}">
                                            <Setter Property="Margin" Value="10 0 0 0" />
                                            <Setter Property="Foreground" Value="Transparent" />
                                            <Setter Property="VerticalAlignment" Value="Center"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
                                                    <Setter Property="Foreground" Value="Black" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>





        </ResourceDictionary>
    </Application.Resources>
</Application>
